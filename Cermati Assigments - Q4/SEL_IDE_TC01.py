# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTC01():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_tC01(self):
    # Test name: TC01
    # Step # | name | target | value
    # 1 | open | https://www.cermati.com/app/gabung | 
    self.driver.get("https://www.cermati.com/app/gabung")
    # 2 | setWindowSize | 1200x770 | 
    self.driver.set_window_size(1200, 770)
    # 3 | click | id=email | 
    self.driver.find_element(By.ID, "email").click()
    # 4 | type | id=email | archmtdiapari@gmail.com
    self.driver.find_element(By.ID, "email").send_keys("archmtdiapari@gmail.com")
    # 5 | type | id=mobilePhone | 081211806728
    self.driver.find_element(By.ID, "mobilePhone").send_keys("081211806728")
    # 6 | click | id=password | 
    self.driver.find_element(By.ID, "password").click()
    # 7 | type | id=password | Cermati123!
    self.driver.find_element(By.ID, "password").send_keys("Cermati123!")
    # 8 | click | id=confirmPassword | 
    self.driver.find_element(By.ID, "confirmPassword").click()
    # 9 | type | id=confirmPassword | Cermati123!
    self.driver.find_element(By.ID, "confirmPassword").send_keys("Cermati123!")
    # 10 | click | id=firstName | 
    self.driver.find_element(By.ID, "firstName").click()
    # 11 | type | id=firstName | Aulia Rachmat
    self.driver.find_element(By.ID, "firstName").send_keys("Aulia Rachmat")
    # 12 | click | id=lastName | 
    self.driver.find_element(By.ID, "lastName").click()
    # 13 | type | id=lastName | Diapari
    self.driver.find_element(By.ID, "lastName").send_keys("Diapari")
    # 14 | click | id=cityAndProvince | 
    self.driver.find_element(By.ID, "cityAndProvince").click()
    # 15 | click | css=.autocomplete__list-item_fTFLC | 
    self.driver.find_element(By.CSS_SELECTOR, ".autocomplete__list-item_fTFLC").click()
    # 16 | type | id=cityAndProvince | KOTA DEPOK
    self.driver.find_element(By.ID, "cityAndProvince").send_keys("KOTA DEPOK")
    # 17 | click | css=.TermsAndConditions_checkbox__text__ZPxfq | 
    self.driver.find_element(By.CSS_SELECTOR, ".TermsAndConditions_checkbox__text__ZPxfq").click()
    # 18 | click | css=.TermsAndConditions_checkbox__text__ZPxfq | 
    self.driver.find_element(By.CSS_SELECTOR, ".TermsAndConditions_checkbox__text__ZPxfq").click()
    # 19 | click | css=.RegistrationForm_form-container__button-text__k6N8W | 
    self.driver.find_element(By.CSS_SELECTOR, ".RegistrationForm_form-container__button-text__k6N8W").click()


    # 20 | runScript | window.scrollTo(0,0) |
    self.driver.execute_script("window.scrollTo(0,0)")
    # 21 | click | css=.btn_SGZcZ:nth-child(2) | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn_SGZcZ:nth-child(2)").click()
    # 22 | mouseOver | css=.btn_SGZcZ:nth-child(2) | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".btn_SGZcZ:nth-child(2)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 23 | type | id=pin-input-0 | 7
    self.driver.find_element(By.ID, "pin-input-0").send_keys("7")
    # 24 | type | id=pin-input-1 | 0
    self.driver.find_element(By.ID, "pin-input-1").send_keys("0")
    # 25 | type | id=pin-input-2 | 3
    self.driver.find_element(By.ID, "pin-input-2").send_keys("3")
    # 26 | type | id=pin-input-3 | 7
    self.driver.find_element(By.ID, "pin-input-3").send_keys("7")
    # 27 | type | id=pin-input-4 | 9
    self.driver.find_element(By.ID, "pin-input-4").send_keys("9")
    # 28 | type | id=pin-input-5 | 3
    self.driver.find_element(By.ID, "pin-input-5").send_keys("3")
    # 29 | mouseOver | css=.ProductListCard_product__EpNEq:nth-child(2) > .ProductListCard_product__icon__WLmXL | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".ProductListCard_product__EpNEq:nth-child(2) > .ProductListCard_product__icon__WLmXL")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 30 | mouseOut | css=.ProductListCard_product__EpNEq:nth-child(2) > .ProductListCard_product__icon__WLmXL | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 31 | mouseOver | css=.ce-money-express | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".ce-money-express")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 32 | mouseOut | css=.ce-money-express | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 33 | mouseOver | css=.ProductListCard_product__EpNEq:nth-child(2) | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".ProductListCard_product__EpNEq:nth-child(2)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 34 | close |  | 
    self.driver.close()
  
